public class Stuff implements List<String>{
	String a[];
	int size=10;
	int on=0;
	public Stuff(){
		a=new String[size];
		
	}
	@Override
	public boolean add(String arg0) {
		a[on]=arg0;
		if(++on>=size)doubleSize();
		return false;
	}
	@Override
	public void add(int arg0, String arg1) {
		if (arg0>on)arg0=on;
		for(int i=on;i>=arg0;i--){
			if(i==arg0){
				a[i]=arg1;
			}
			else a[i]=a[i-1];
		}
		if(++on>=size)doubleSize();
		
	}
	
	private void doubleSize(){
		size=size*2+1;
		String c[]=new String[size];
		for(int i=0;i<a.length;i++){
			c[i]=a[i];
		}
		a=c;
	}
	@Override
	public boolean addAll(Collection<? extends String> arg0) {
		for(String s:arg0){
			add(s);
		}
		return false;
	}
	@Override
	public boolean addAll(int arg0, Collection<? extends String> arg1) {
		String temp[]=new String[arg1.size()];
		int on2=arg1.size()-1;
		for(String s:arg1){
			temp[on2--]=s;
		}
		for(String s:temp){
			add(arg0, s);
		}
		return false;
	}
@Override
	public boolean remove(Object arg0) {
		for(int i=0;i<a.length;i++){
			if(a[i].equals(arg0)){
				remove(i);
				break;
			}
		}
		return false;
	}

	@Override
	public String remove(int arg0) {
		if(arg0>=on)return null;
		String temp=a[arg0];
		for(int i=arg0; i<on;i++){
			if(i!=on-1)a[i]=a[i+1];
			else {
				on--;
				break;
			}
			System.out.println(this.toString());
		}
		return temp;
	}
	@Override
	public void clear() {
		on=0;
	}

	@Override
	public boolean contains(Object arg0) {
		for(int i=0;i<on;i++){
			if(arg0.equals(a[i]))return true;
		}
		return false;
	}

	@Override
	public boolean containsAll(Collection<?> arg0) {
		for(Object s:arg0){
			if(!contains(s))return false;
		}
		return true;
	}

	@Override
	public String get(int arg0) {
		return a[arg0];
	}

	@Override
	public int indexOf(Object arg0) {
		// TODO Auto-generated method stub
		for(int i=0;i<on;i++){
			if(a[i].equals(arg0))return i;
		}
		return -1;
	}

	@Override
	public boolean isEmpty() {
		// TODO Auto-generated method stub
		return on==0;
	}
	@Override
	public <T> T[] toArray(T[] arg0) {
		for(int i=0;i<a.length;i++)
			arg0[i]=(T) a[i];
		return arg0;
	}
	@Override
	public Iterator<String> iterator() {
		// TODO Auto-generated method stub
		return new Iterator<String>(){
			int cc=0;
			@Override
			public boolean hasNext() {
				return cc<on;
			}

			@Override
			public String next() {
				return hasNext()?a[cc++]:null;
			}

			@Override
			public void remove() {
				//no need to do this
			}
		};
	}
